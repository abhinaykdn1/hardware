Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                              sixrgbled.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
LOAD sixrgbled.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x22c
 *(.vectors)
 .vectors       0x00000000       0x34 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000034                . = ALIGN (0x2)
                0x00000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000034        0x0 linker stubs
 *(.trampolines*)
                0x00000034                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000034                __ctors_start = .
 *(.ctors)
                0x00000034                __ctors_end = .
                0x00000034                __dtors_start = .
 *(.dtors)
                0x00000034                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000034        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
                0x00000034                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000034        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000040       0x16 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                0x00000040                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000056        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
 *(.init9)
 *(.text)
 .text          0x0000005a        0x2 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
                0x0000005a                __vector_22
                0x0000005a                __vector_1
                0x0000005a                __vector_24
                0x0000005a                __vector_12
                0x0000005a                __bad_interrupt
                0x0000005a                __vector_6
                0x0000005a                __vector_3
                0x0000005a                __vector_23
                0x0000005a                __vector_25
                0x0000005a                __vector_11
                0x0000005a                __vector_13
                0x0000005a                __vector_17
                0x0000005a                __vector_19
                0x0000005a                __vector_7
                0x0000005a                __vector_5
                0x0000005a                __vector_4
                0x0000005a                __vector_9
                0x0000005a                __vector_2
                0x0000005a                __vector_21
                0x0000005a                __vector_15
                0x0000005a                __vector_8
                0x0000005a                __vector_14
                0x0000005a                __vector_10
                0x0000005a                __vector_16
                0x0000005a                __vector_18
                0x0000005a                __vector_20
 .text          0x0000005c      0x1cc sixrgbled.o
                0x0000005c                init
                0x0000007e                allon
                0x00000092                alloff
                0x000000a6                biton
                0x000000c2                bitoff
                0x000000da                bitset
                0x000000ea                colon
                0x000000f4                coloff
                0x00000100                colset
                0x00000110                main
 .text          0x00000228        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text          0x00000228        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                0x00000228                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000228        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000228        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                0x00000228                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000228        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                0x00000228                _exit
                0x00000228                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000228        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x0000022c                _etext = .

.data           0x00800100       0x12 load address 0x0000022c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
 .data          0x00800100       0x12 sixrgbled.o
 .data          0x00800112        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .data          0x00800112        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800112                . = ALIGN (0x2)
                0x00800112                _edata = .
                0x00800112                PROVIDE (__data_end, .)

.bss            0x00800112        0x0
                0x00800112                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800112        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o
 .bss           0x00800112        0x0 sixrgbled.o
 .bss           0x00800112        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .bss           0x00800112        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x00800112                PROVIDE (__bss_end, .)
                0x0000022c                __data_load_start = LOADADDR (.data)
                0x0000023e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800112        0x0
                0x00800112                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800112                PROVIDE (__noinit_end, .)
                0x00800112                _end = .
                0x00800112                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm48pa.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 sixrgbled.o

.debug_pubnames
                0x00000000       0x79
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x79 sixrgbled.o

.debug_info     0x00000000      0x33d
 *(.debug_info)
 .debug_info    0x00000000      0x33d sixrgbled.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000       0xf2
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xf2 sixrgbled.o

.debug_line     0x00000000      0x3be
 *(.debug_line)
 .debug_line    0x00000000      0x3be sixrgbled.o

.debug_frame    0x00000000       0xb0
 *(.debug_frame)
 .debug_frame   0x00000000       0xb0 sixrgbled.o

.debug_str      0x00000000       0xd7
 *(.debug_str)
 .debug_str     0x00000000       0xd7 sixrgbled.o
                                0x110 (size before relaxing)

.debug_loc      0x00000000      0x2c5
 *(.debug_loc)
 .debug_loc     0x00000000      0x2c5 sixrgbled.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(sixrgbled.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x1e
 .debug_pubtypes
                0x00000000       0x1e sixrgbled.o

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x48 sixrgbled.o
