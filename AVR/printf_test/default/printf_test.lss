
printf_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000018e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  0000018e  00000222  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800074  00800074  00000236  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000238  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  00000989  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000007a  00000000  00000000  000009c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000510  00000000  00000000  00000a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000031c  00000000  00000000  00000f53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000039a  00000000  00000000  0000126f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000070  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000018f  00000000  00000000  0000167c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000000f1  00000000  00000000  0000180b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000088  00000000  00000000  000018fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000010  00000000  00000000  00001984  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e8       	ldi	r30, 0x8E	; 142
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a4 e7       	ldi	r26, 0x74	; 116
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 37       	cpi	r26, 0x7A	; 122
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 69 00 	call	0xd2	; 0xd2 <main>
  8a:	0c 94 c5 00 	jmp	0x18a	; 0x18a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <uart_putchar>:
#define UBRRH_VALUE HI(UBRR_VALUE)

//#include <util/setbaud.h>

int uart_putchar(char c, FILE *stream)
{
  92:	1f 93       	push	r17
  94:	18 2f       	mov	r17, r24
	if (c == '\n') {
  96:	8a 30       	cpi	r24, 0x0A	; 10
  98:	19 f4       	brne	.+6      	; 0xa0 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  9a:	8d e0       	ldi	r24, 0x0D	; 13
  9c:	0e 94 49 00 	call	0x92	; 0x92 <uart_putchar>
	}
	loop_until_bit_is_set(UCSRA, UDRE);
  a0:	5d 9b       	sbis	0x0b, 5	; 11
  a2:	fe cf       	rjmp	.-4      	; 0xa0 <uart_putchar+0xe>
	UDR = c;
  a4:	1c b9       	out	0x0c, r17	; 12
	return 0;
}
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	1f 91       	pop	r17
  ac:	08 95       	ret

000000ae <init_uart>:

static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

void init_uart()
{
    UBRRL = UBRRL_VALUE;
  ae:	89 e0       	ldi	r24, 0x09	; 9
  b0:	89 b9       	out	0x09, r24	; 9
    UBRRH = UBRRH_VALUE;
  b2:	10 bc       	out	0x20, r1	; 32
    UCSRA = 0;
  b4:	1b b8       	out	0x0b, r1	; 11
    UCSRB = 1<<RXEN|1<<TXEN/*|1<<RXCIE|1<<TXCIE*/;
  b6:	88 e1       	ldi	r24, 0x18	; 24
  b8:	8a b9       	out	0x0a, r24	; 10
    UCSRC = 1<<URSEL|1<<UCSZ0|1<<UCSZ1;
  ba:	86 e8       	ldi	r24, 0x86	; 134
  bc:	80 bd       	out	0x20, r24	; 32
	stdout = &mystdout;
  be:	86 e6       	ldi	r24, 0x66	; 102
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	90 93 77 00 	sts	0x0077, r25
  c6:	80 93 76 00 	sts	0x0076, r24
}
  ca:	08 95       	ret

000000cc <init>:

void init()
{
	init_uart();
  cc:	0e 94 57 00 	call	0xae	; 0xae <init_uart>
}
  d0:	08 95       	ret

000000d2 <main>:
	stdout = &mystdout;
}

void init()
{
	init_uart();
  d2:	0e 94 57 00 	call	0xae	; 0xae <init_uart>

int main(void)
{
	init();	

	printf("Hello\n");
  d6:	80 e6       	ldi	r24, 0x60	; 96
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 75 00 	call	0xea	; 0xea <puts>
	int i = 0;
	while(1)
	{
		uart_putchar('1', NULL);
  de:	81 e3       	ldi	r24, 0x31	; 49
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	70 e0       	ldi	r23, 0x00	; 0
  e4:	0e 94 49 00 	call	0x92	; 0x92 <uart_putchar>
  e8:	fa cf       	rjmp	.-12     	; 0xde <main+0xc>

000000ea <puts>:
  ea:	ef 92       	push	r14
  ec:	ff 92       	push	r15
  ee:	0f 93       	push	r16
  f0:	1f 93       	push	r17
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	8c 01       	movw	r16, r24
  f8:	e0 91 76 00 	lds	r30, 0x0076
  fc:	f0 91 77 00 	lds	r31, 0x0077
 100:	83 81       	ldd	r24, Z+3	; 0x03
 102:	81 ff       	sbrs	r24, 1
 104:	1f c0       	rjmp	.+62     	; 0x144 <puts+0x5a>
 106:	c0 e0       	ldi	r28, 0x00	; 0
 108:	d0 e0       	ldi	r29, 0x00	; 0
 10a:	0a c0       	rjmp	.+20     	; 0x120 <puts+0x36>
 10c:	db 01       	movw	r26, r22
 10e:	18 96       	adiw	r26, 0x08	; 8
 110:	ed 91       	ld	r30, X+
 112:	fc 91       	ld	r31, X
 114:	19 97       	sbiw	r26, 0x09	; 9
 116:	09 95       	icall
 118:	00 97       	sbiw	r24, 0x00	; 0
 11a:	11 f0       	breq	.+4      	; 0x120 <puts+0x36>
 11c:	cf ef       	ldi	r28, 0xFF	; 255
 11e:	df ef       	ldi	r29, 0xFF	; 255
 120:	f8 01       	movw	r30, r16
 122:	81 91       	ld	r24, Z+
 124:	8f 01       	movw	r16, r30
 126:	60 91 76 00 	lds	r22, 0x0076
 12a:	70 91 77 00 	lds	r23, 0x0077
 12e:	88 23       	and	r24, r24
 130:	69 f7       	brne	.-38     	; 0x10c <puts+0x22>
 132:	db 01       	movw	r26, r22
 134:	18 96       	adiw	r26, 0x08	; 8
 136:	ed 91       	ld	r30, X+
 138:	fc 91       	ld	r31, X
 13a:	19 97       	sbiw	r26, 0x09	; 9
 13c:	8a e0       	ldi	r24, 0x0A	; 10
 13e:	09 95       	icall
 140:	00 97       	sbiw	r24, 0x00	; 0
 142:	11 f0       	breq	.+4      	; 0x148 <puts+0x5e>
 144:	cf ef       	ldi	r28, 0xFF	; 255
 146:	df ef       	ldi	r29, 0xFF	; 255
 148:	ce 01       	movw	r24, r28
 14a:	cd b7       	in	r28, 0x3d	; 61
 14c:	de b7       	in	r29, 0x3e	; 62
 14e:	e6 e0       	ldi	r30, 0x06	; 6
 150:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__epilogue_restores__+0x18>

00000154 <__epilogue_restores__>:
 154:	2a 88       	ldd	r2, Y+18	; 0x12
 156:	39 88       	ldd	r3, Y+17	; 0x11
 158:	48 88       	ldd	r4, Y+16	; 0x10
 15a:	5f 84       	ldd	r5, Y+15	; 0x0f
 15c:	6e 84       	ldd	r6, Y+14	; 0x0e
 15e:	7d 84       	ldd	r7, Y+13	; 0x0d
 160:	8c 84       	ldd	r8, Y+12	; 0x0c
 162:	9b 84       	ldd	r9, Y+11	; 0x0b
 164:	aa 84       	ldd	r10, Y+10	; 0x0a
 166:	b9 84       	ldd	r11, Y+9	; 0x09
 168:	c8 84       	ldd	r12, Y+8	; 0x08
 16a:	df 80       	ldd	r13, Y+7	; 0x07
 16c:	ee 80       	ldd	r14, Y+6	; 0x06
 16e:	fd 80       	ldd	r15, Y+5	; 0x05
 170:	0c 81       	ldd	r16, Y+4	; 0x04
 172:	1b 81       	ldd	r17, Y+3	; 0x03
 174:	aa 81       	ldd	r26, Y+2	; 0x02
 176:	b9 81       	ldd	r27, Y+1	; 0x01
 178:	ce 0f       	add	r28, r30
 17a:	d1 1d       	adc	r29, r1
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	f8 94       	cli
 180:	de bf       	out	0x3e, r29	; 62
 182:	0f be       	out	0x3f, r0	; 63
 184:	cd bf       	out	0x3d, r28	; 61
 186:	ed 01       	movw	r28, r26
 188:	08 95       	ret

0000018a <_exit>:
 18a:	f8 94       	cli

0000018c <__stop_program>:
 18c:	ff cf       	rjmp	.-2      	; 0x18c <__stop_program>
