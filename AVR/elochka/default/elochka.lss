
elochka.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000006f6  0000076a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  00000770  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000058  00000000  00000000  00000ec1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000085  00000000  00000000  00000f19  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000032c  00000000  00000000  00000f9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001de  00000000  00000000  000012ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000510  00000000  00000000  000014a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  000019b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000148  00000000  00000000  00001a78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000012d  00000000  00000000  00001bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 0000003d  00000000  00000000  00001ced  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000028  00000000  00000000  00001d2a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	51 c0       	rjmp	.+162    	; 0xa4 <__ctors_end>
   2:	63 c0       	rjmp	.+198    	; 0xca <__bad_interrupt>
   4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
   6:	61 c0       	rjmp	.+194    	; 0xca <__bad_interrupt>
   8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
   a:	5f c0       	rjmp	.+190    	; 0xca <__bad_interrupt>
   c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
   e:	5d c0       	rjmp	.+186    	; 0xca <__bad_interrupt>
  10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
  12:	5b c0       	rjmp	.+182    	; 0xca <__bad_interrupt>
  14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
  16:	59 c0       	rjmp	.+178    	; 0xca <__bad_interrupt>
  18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
  1a:	57 c0       	rjmp	.+174    	; 0xca <__bad_interrupt>
  1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
  1e:	55 c0       	rjmp	.+170    	; 0xca <__bad_interrupt>
  20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
  22:	53 c0       	rjmp	.+166    	; 0xca <__bad_interrupt>
  24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
  26:	51 c0       	rjmp	.+162    	; 0xca <__bad_interrupt>
  28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
  2a:	4f c0       	rjmp	.+158    	; 0xca <__bad_interrupt>
  2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
  2e:	4d c0       	rjmp	.+154    	; 0xca <__bad_interrupt>
  30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
  32:	4b c0       	rjmp	.+150    	; 0xca <__bad_interrupt>
  34:	d2 c0       	rjmp	.+420    	; 0x1da <ledon+0x40>
  36:	db c0       	rjmp	.+438    	; 0x1ee <ledon+0x54>
  38:	e4 c0       	rjmp	.+456    	; 0x202 <ledon+0x68>
  3a:	ed c0       	rjmp	.+474    	; 0x216 <ledon+0x7c>
  3c:	f6 c0       	rjmp	.+492    	; 0x22a <ledon+0x90>
  3e:	ff c0       	rjmp	.+510    	; 0x23e <ledon+0xa4>
  40:	08 c1       	rjmp	.+528    	; 0x252 <ledon+0xb8>
  42:	11 c1       	rjmp	.+546    	; 0x266 <ledon+0xcc>
  44:	1a c1       	rjmp	.+564    	; 0x27a <ledon+0xe0>
  46:	23 c1       	rjmp	.+582    	; 0x28e <ledon+0xf4>
  48:	2c c1       	rjmp	.+600    	; 0x2a2 <ledon+0x108>
  4a:	35 c1       	rjmp	.+618    	; 0x2b6 <ledon+0x11c>
  4c:	63 c1       	rjmp	.+710    	; 0x314 <__stack+0x15>
  4e:	6c c1       	rjmp	.+728    	; 0x328 <__stack+0x29>
  50:	75 c1       	rjmp	.+746    	; 0x33c <__stack+0x3d>
  52:	7e c1       	rjmp	.+764    	; 0x350 <__stack+0x51>
  54:	87 c1       	rjmp	.+782    	; 0x364 <__stack+0x65>
  56:	90 c1       	rjmp	.+800    	; 0x378 <__stack+0x79>
  58:	99 c1       	rjmp	.+818    	; 0x38c <__stack+0x8d>
  5a:	a2 c1       	rjmp	.+836    	; 0x3a0 <__stack+0xa1>
  5c:	ab c1       	rjmp	.+854    	; 0x3b4 <__stack+0xb5>
  5e:	b4 c1       	rjmp	.+872    	; 0x3c8 <__stack+0xc9>
  60:	bd c1       	rjmp	.+890    	; 0x3dc <__stack+0xdd>
  62:	c6 c1       	rjmp	.+908    	; 0x3f0 <__stack+0xf1>

00000064 <sinb>:
  64:	80 82 85 88 8b 8f 92 95 98 9b 9e a1 a4 a7 aa ad     ................
  74:	b0 b2 b5 b8 bb be c0 c3 c6 c8 cb cd d0 d2 d4 d7     ................
  84:	d9 db dd df e1 e3 e5 e7 e9 ea ec ee ef f0 f2 f3     ................
  94:	f4 f5 f7 f8 f9 f9 fa fb fc fc fd fd fd fe fe ff     ................

000000a4 <__ctors_end>:
  a4:	11 24       	eor	r1, r1
  a6:	1f be       	out	0x3f, r1	; 63
  a8:	cf ef       	ldi	r28, 0xFF	; 255
  aa:	d2 e0       	ldi	r29, 0x02	; 2
  ac:	de bf       	out	0x3e, r29	; 62
  ae:	cd bf       	out	0x3d, r28	; 61

000000b0 <__do_copy_data>:
  b0:	11 e0       	ldi	r17, 0x01	; 1
  b2:	a0 e0       	ldi	r26, 0x00	; 0
  b4:	b1 e0       	ldi	r27, 0x01	; 1
  b6:	e6 ef       	ldi	r30, 0xF6	; 246
  b8:	f6 e0       	ldi	r31, 0x06	; 6
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x10>
  bc:	05 90       	lpm	r0, Z+
  be:	0d 92       	st	X+, r0
  c0:	a4 30       	cpi	r26, 0x04	; 4
  c2:	b1 07       	cpc	r27, r17
  c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0xc>
  c6:	c3 d1       	rcall	.+902    	; 0x44e <main>
  c8:	14 c3       	rjmp	.+1576   	; 0x6f2 <_exit>

000000ca <__bad_interrupt>:
  ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <sin>:
								233,234,236,238,239,240,242,243,
								244,245,247,248,249,249,250,251,
								252,252,253,253,253,254,254,255};

unsigned char sin(unsigned char x) //0 = 0, 2pi = 256, pi = 128; result -1 = 1, 0 = 128, 1 = 255
{
  cc:	1f 93       	push	r17
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	00 d0       	rcall	.+0      	; 0xd4 <sin+0x8>
  d4:	00 d0       	rcall	.+0      	; 0xd6 <sin+0xa>
  d6:	00 d0       	rcall	.+0      	; 0xd8 <sin+0xc>
  d8:	cd b7       	in	r28, 0x3d	; 61
  da:	de b7       	in	r29, 0x3e	; 62
  dc:	8e 83       	std	Y+6, r24	; 0x06
	//if 0..pi/2
	unsigned char xx = x;
  de:	8e 81       	ldd	r24, Y+6	; 0x06
  e0:	89 83       	std	Y+1, r24	; 0x01
	if (xx >= 128)
  e2:	89 81       	ldd	r24, Y+1	; 0x01
  e4:	88 23       	and	r24, r24
  e6:	1c f4       	brge	.+6      	; 0xee <sin+0x22>
		xx = xx - 128;
  e8:	89 81       	ldd	r24, Y+1	; 0x01
  ea:	80 58       	subi	r24, 0x80	; 128
  ec:	89 83       	std	Y+1, r24	; 0x01
	if (xx >= 64)
  ee:	89 81       	ldd	r24, Y+1	; 0x01
  f0:	80 34       	cpi	r24, 0x40	; 64
  f2:	30 f0       	brcs	.+12     	; 0x100 <sin+0x34>
		xx = 64 - xx;
  f4:	90 e4       	ldi	r25, 0x40	; 64
  f6:	89 81       	ldd	r24, Y+1	; 0x01
  f8:	29 2f       	mov	r18, r25
  fa:	28 1b       	sub	r18, r24
  fc:	82 2f       	mov	r24, r18
  fe:	89 83       	std	Y+1, r24	; 0x01
	unsigned char result = pgm_read_byte(&(sinb[xx]));
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	88 2f       	mov	r24, r24
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	8c 59       	subi	r24, 0x9C	; 156
 108:	9f 4f       	sbci	r25, 0xFF	; 255
 10a:	9c 83       	std	Y+4, r25	; 0x04
 10c:	8b 83       	std	Y+3, r24	; 0x03
 10e:	8b 81       	ldd	r24, Y+3	; 0x03
 110:	9c 81       	ldd	r25, Y+4	; 0x04
 112:	fc 01       	movw	r30, r24
 114:	14 91       	lpm	r17, Z+
 116:	1d 83       	std	Y+5, r17	; 0x05
 118:	8d 81       	ldd	r24, Y+5	; 0x05
 11a:	8a 83       	std	Y+2, r24	; 0x02
	if (x >= 128)
 11c:	8e 81       	ldd	r24, Y+6	; 0x06
 11e:	88 23       	and	r24, r24
 120:	34 f4       	brge	.+12     	; 0x12e <sin+0x62>
		result = 128-result;
 122:	90 e8       	ldi	r25, 0x80	; 128
 124:	8a 81       	ldd	r24, Y+2	; 0x02
 126:	f9 2f       	mov	r31, r25
 128:	f8 1b       	sub	r31, r24
 12a:	8f 2f       	mov	r24, r31
 12c:	8a 83       	std	Y+2, r24	; 0x02
	return result;
 12e:	8a 81       	ldd	r24, Y+2	; 0x02
}
 130:	26 96       	adiw	r28, 0x06	; 6
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	f8 94       	cli
 136:	de bf       	out	0x3e, r29	; 62
 138:	0f be       	out	0x3f, r0	; 63
 13a:	cd bf       	out	0x3d, r28	; 61
 13c:	cf 91       	pop	r28
 13e:	df 91       	pop	r29
 140:	1f 91       	pop	r17
 142:	08 95       	ret

00000144 <init>:
#define LEDAOFF LEDAP &= ~bv(LEDA)
#define LEDBON  LEDBP |=  bv(LEDB)
#define LEDBOFF LEDBP &= ~bv(LEDB)

void init(void)
{
 144:	df 93       	push	r29
 146:	cf 93       	push	r28
 148:	cd b7       	in	r28, 0x3d	; 61
 14a:	de b7       	in	r29, 0x3e	; 62
        //initIO();
        //initOC2();
		//US_OPORT |= bv(US_OP);
		//US_OPORT &= ~(bv(US_ON));
		//time0 = 0;
	DDRB |= bv(PWR);
 14c:	84 e2       	ldi	r24, 0x24	; 36
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	24 e2       	ldi	r18, 0x24	; 36
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	f9 01       	movw	r30, r18
 156:	20 81       	ld	r18, Z
 158:	24 60       	ori	r18, 0x04	; 4
 15a:	fc 01       	movw	r30, r24
 15c:	20 83       	st	Z, r18
	PWRP |= bv(PWR);
 15e:	85 e2       	ldi	r24, 0x25	; 37
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	25 e2       	ldi	r18, 0x25	; 37
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	f9 01       	movw	r30, r18
 168:	20 81       	ld	r18, Z
 16a:	24 60       	ori	r18, 0x04	; 4
 16c:	fc 01       	movw	r30, r24
 16e:	20 83       	st	Z, r18
	DDRD |= bv(LED0) | bv(LED1) | bv(LED2) | bv(LED3) | bv(LED4);
 170:	8a e2       	ldi	r24, 0x2A	; 42
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	2a e2       	ldi	r18, 0x2A	; 42
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	f9 01       	movw	r30, r18
 17a:	20 81       	ld	r18, Z
 17c:	2f 61       	ori	r18, 0x1F	; 31
 17e:	fc 01       	movw	r30, r24
 180:	20 83       	st	Z, r18
	DDRC |= bv(LED5) | bv(LED6) | bv(LED7) | bv(LED8) | bv(LED9) | bv(LEDA) | bv(LEDB);
 182:	87 e2       	ldi	r24, 0x27	; 39
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	27 e2       	ldi	r18, 0x27	; 39
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	f9 01       	movw	r30, r18
 18c:	20 81       	ld	r18, Z
 18e:	2f 67       	ori	r18, 0x7F	; 127
 190:	fc 01       	movw	r30, r24
 192:	20 83       	st	Z, r18
	//PORTD |= bv(LED0) | bv(LED1) | bv(LED2) | bv(LED3) | bv(LED4);
	//PORTC |= bv(LED5) | bv(LED6) | bv(LED7) | bv(LED8) | bv(LED9) | bv(LEDA) | bv(LEDB);
}
 194:	cf 91       	pop	r28
 196:	df 91       	pop	r29
 198:	08 95       	ret

0000019a <ledon>:

void ledon(int l)
{
 19a:	df 93       	push	r29
 19c:	cf 93       	push	r28
 19e:	00 d0       	rcall	.+0      	; 0x1a0 <ledon+0x6>
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	9a 83       	std	Y+2, r25	; 0x02
 1a6:	89 83       	std	Y+1, r24	; 0x01
	switch (l%12) {
 1a8:	89 81       	ldd	r24, Y+1	; 0x01
 1aa:	9a 81       	ldd	r25, Y+2	; 0x02
 1ac:	2c e0       	ldi	r18, 0x0C	; 12
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	b9 01       	movw	r22, r18
 1b2:	98 d1       	rcall	.+816    	; 0x4e4 <__divmodhi4>
 1b4:	aa 27       	eor	r26, r26
 1b6:	97 fd       	sbrc	r25, 7
 1b8:	a0 95       	com	r26
 1ba:	ba 2f       	mov	r27, r26
 1bc:	40 e0       	ldi	r20, 0x00	; 0
 1be:	50 e0       	ldi	r21, 0x00	; 0
 1c0:	2b e0       	ldi	r18, 0x0B	; 11
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	84 1b       	sub	r24, r20
 1c6:	95 0b       	sbc	r25, r21
 1c8:	28 17       	cp	r18, r24
 1ca:	39 07       	cpc	r19, r25
 1cc:	08 f4       	brcc	.+2      	; 0x1d0 <ledon+0x36>
 1ce:	7d c0       	rjmp	.+250    	; 0x2ca <ledon+0x130>
 1d0:	86 5e       	subi	r24, 0xE6	; 230
 1d2:	9f 4f       	sbci	r25, 0xFF	; 255
 1d4:	8f 93       	push	r24
 1d6:	9f 93       	push	r25
 1d8:	08 95       	ret
		case 0: {
			LED0ON;
 1da:	8b e2       	ldi	r24, 0x2B	; 43
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	2b e2       	ldi	r18, 0x2B	; 43
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	f9 01       	movw	r30, r18
 1e4:	20 81       	ld	r18, Z
 1e6:	20 61       	ori	r18, 0x10	; 16
 1e8:	fc 01       	movw	r30, r24
 1ea:	20 83       	st	Z, r18
			break;
 1ec:	6e c0       	rjmp	.+220    	; 0x2ca <ledon+0x130>
		}
		case 1: {
			LED1ON;
 1ee:	8b e2       	ldi	r24, 0x2B	; 43
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	2b e2       	ldi	r18, 0x2B	; 43
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	f9 01       	movw	r30, r18
 1f8:	20 81       	ld	r18, Z
 1fa:	28 60       	ori	r18, 0x08	; 8
 1fc:	fc 01       	movw	r30, r24
 1fe:	20 83       	st	Z, r18
			break;
 200:	64 c0       	rjmp	.+200    	; 0x2ca <ledon+0x130>
		}
		case 2: {
			LED2ON;
 202:	8b e2       	ldi	r24, 0x2B	; 43
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	2b e2       	ldi	r18, 0x2B	; 43
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	f9 01       	movw	r30, r18
 20c:	20 81       	ld	r18, Z
 20e:	24 60       	ori	r18, 0x04	; 4
 210:	fc 01       	movw	r30, r24
 212:	20 83       	st	Z, r18
			break;
 214:	5a c0       	rjmp	.+180    	; 0x2ca <ledon+0x130>
		}
		case 3: {
			LED3ON;
 216:	8b e2       	ldi	r24, 0x2B	; 43
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	2b e2       	ldi	r18, 0x2B	; 43
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	f9 01       	movw	r30, r18
 220:	20 81       	ld	r18, Z
 222:	22 60       	ori	r18, 0x02	; 2
 224:	fc 01       	movw	r30, r24
 226:	20 83       	st	Z, r18
			break;
 228:	50 c0       	rjmp	.+160    	; 0x2ca <ledon+0x130>
		}
		case 4: {
			LED4ON;
 22a:	8b e2       	ldi	r24, 0x2B	; 43
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	2b e2       	ldi	r18, 0x2B	; 43
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	f9 01       	movw	r30, r18
 234:	20 81       	ld	r18, Z
 236:	21 60       	ori	r18, 0x01	; 1
 238:	fc 01       	movw	r30, r24
 23a:	20 83       	st	Z, r18
			break;
 23c:	46 c0       	rjmp	.+140    	; 0x2ca <ledon+0x130>
		}
		case 5: {
			LED5ON;
 23e:	88 e2       	ldi	r24, 0x28	; 40
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	28 e2       	ldi	r18, 0x28	; 40
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	f9 01       	movw	r30, r18
 248:	20 81       	ld	r18, Z
 24a:	20 64       	ori	r18, 0x40	; 64
 24c:	fc 01       	movw	r30, r24
 24e:	20 83       	st	Z, r18
			break;
 250:	3c c0       	rjmp	.+120    	; 0x2ca <ledon+0x130>
		}
		case 6: {
			LED6ON;
 252:	88 e2       	ldi	r24, 0x28	; 40
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	28 e2       	ldi	r18, 0x28	; 40
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	f9 01       	movw	r30, r18
 25c:	20 81       	ld	r18, Z
 25e:	20 62       	ori	r18, 0x20	; 32
 260:	fc 01       	movw	r30, r24
 262:	20 83       	st	Z, r18
			break;
 264:	32 c0       	rjmp	.+100    	; 0x2ca <ledon+0x130>
		}
		case 7: {
			LED7ON;
 266:	88 e2       	ldi	r24, 0x28	; 40
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	28 e2       	ldi	r18, 0x28	; 40
 26c:	30 e0       	ldi	r19, 0x00	; 0
 26e:	f9 01       	movw	r30, r18
 270:	20 81       	ld	r18, Z
 272:	20 61       	ori	r18, 0x10	; 16
 274:	fc 01       	movw	r30, r24
 276:	20 83       	st	Z, r18
			break;
 278:	28 c0       	rjmp	.+80     	; 0x2ca <ledon+0x130>
		}
		case 8: {
			LED8ON;
 27a:	88 e2       	ldi	r24, 0x28	; 40
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	28 e2       	ldi	r18, 0x28	; 40
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	f9 01       	movw	r30, r18
 284:	20 81       	ld	r18, Z
 286:	28 60       	ori	r18, 0x08	; 8
 288:	fc 01       	movw	r30, r24
 28a:	20 83       	st	Z, r18
			break;
 28c:	1e c0       	rjmp	.+60     	; 0x2ca <ledon+0x130>
		}
		case 9: {
			LED9ON;
 28e:	88 e2       	ldi	r24, 0x28	; 40
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	28 e2       	ldi	r18, 0x28	; 40
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	f9 01       	movw	r30, r18
 298:	20 81       	ld	r18, Z
 29a:	24 60       	ori	r18, 0x04	; 4
 29c:	fc 01       	movw	r30, r24
 29e:	20 83       	st	Z, r18
			break;
 2a0:	14 c0       	rjmp	.+40     	; 0x2ca <ledon+0x130>
		}
		case 10: {
			LEDAON;
 2a2:	88 e2       	ldi	r24, 0x28	; 40
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	28 e2       	ldi	r18, 0x28	; 40
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	f9 01       	movw	r30, r18
 2ac:	20 81       	ld	r18, Z
 2ae:	22 60       	ori	r18, 0x02	; 2
 2b0:	fc 01       	movw	r30, r24
 2b2:	20 83       	st	Z, r18
			break;
 2b4:	0a c0       	rjmp	.+20     	; 0x2ca <ledon+0x130>
		}
		case 11: {
			LEDBON;
 2b6:	88 e2       	ldi	r24, 0x28	; 40
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	28 e2       	ldi	r18, 0x28	; 40
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	f9 01       	movw	r30, r18
 2c0:	20 81       	ld	r18, Z
 2c2:	21 60       	ori	r18, 0x01	; 1
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 83       	st	Z, r18
			break;
 2c8:	00 00       	nop
		}
	}
}
 2ca:	0f 90       	pop	r0
 2cc:	0f 90       	pop	r0
 2ce:	cf 91       	pop	r28
 2d0:	df 91       	pop	r29
 2d2:	08 95       	ret

000002d4 <ledoff>:

void ledoff(int l)
{
 2d4:	df 93       	push	r29
 2d6:	cf 93       	push	r28
 2d8:	00 d0       	rcall	.+0      	; 0x2da <ledoff+0x6>
 2da:	cd b7       	in	r28, 0x3d	; 61
 2dc:	de b7       	in	r29, 0x3e	; 62
 2de:	9a 83       	std	Y+2, r25	; 0x02
 2e0:	89 83       	std	Y+1, r24	; 0x01
	switch (l%12) {
 2e2:	89 81       	ldd	r24, Y+1	; 0x01
 2e4:	9a 81       	ldd	r25, Y+2	; 0x02
 2e6:	2c e0       	ldi	r18, 0x0C	; 12
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	b9 01       	movw	r22, r18
 2ec:	fb d0       	rcall	.+502    	; 0x4e4 <__divmodhi4>
 2ee:	aa 27       	eor	r26, r26
 2f0:	97 fd       	sbrc	r25, 7
 2f2:	a0 95       	com	r26
 2f4:	ba 2f       	mov	r27, r26
 2f6:	40 e0       	ldi	r20, 0x00	; 0
 2f8:	50 e0       	ldi	r21, 0x00	; 0
 2fa:	2b e0       	ldi	r18, 0x0B	; 11
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	84 1b       	sub	r24, r20
 300:	95 0b       	sbc	r25, r21
 302:	28 17       	cp	r18, r24
 304:	39 07       	cpc	r19, r25
 306:	08 f4       	brcc	.+2      	; 0x30a <__stack+0xb>
 308:	7d c0       	rjmp	.+250    	; 0x404 <__stack+0x105>
 30a:	8a 5d       	subi	r24, 0xDA	; 218
 30c:	9f 4f       	sbci	r25, 0xFF	; 255
 30e:	8f 93       	push	r24
 310:	9f 93       	push	r25
 312:	08 95       	ret
		case 0: {
			LED0OFF;
 314:	8b e2       	ldi	r24, 0x2B	; 43
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	2b e2       	ldi	r18, 0x2B	; 43
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	f9 01       	movw	r30, r18
 31e:	20 81       	ld	r18, Z
 320:	2f 7e       	andi	r18, 0xEF	; 239
 322:	fc 01       	movw	r30, r24
 324:	20 83       	st	Z, r18
			break;
 326:	6e c0       	rjmp	.+220    	; 0x404 <__stack+0x105>
		}
		case 1: {
			LED1OFF;
 328:	8b e2       	ldi	r24, 0x2B	; 43
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	2b e2       	ldi	r18, 0x2B	; 43
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	f9 01       	movw	r30, r18
 332:	20 81       	ld	r18, Z
 334:	27 7f       	andi	r18, 0xF7	; 247
 336:	fc 01       	movw	r30, r24
 338:	20 83       	st	Z, r18
			break;
 33a:	64 c0       	rjmp	.+200    	; 0x404 <__stack+0x105>
		}
		case 2: {
			LED2OFF;
 33c:	8b e2       	ldi	r24, 0x2B	; 43
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	2b e2       	ldi	r18, 0x2B	; 43
 342:	30 e0       	ldi	r19, 0x00	; 0
 344:	f9 01       	movw	r30, r18
 346:	20 81       	ld	r18, Z
 348:	2b 7f       	andi	r18, 0xFB	; 251
 34a:	fc 01       	movw	r30, r24
 34c:	20 83       	st	Z, r18
			break;
 34e:	5a c0       	rjmp	.+180    	; 0x404 <__stack+0x105>
		}
		case 3: {
			LED3OFF;
 350:	8b e2       	ldi	r24, 0x2B	; 43
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	2b e2       	ldi	r18, 0x2B	; 43
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	f9 01       	movw	r30, r18
 35a:	20 81       	ld	r18, Z
 35c:	2d 7f       	andi	r18, 0xFD	; 253
 35e:	fc 01       	movw	r30, r24
 360:	20 83       	st	Z, r18
			break;
 362:	50 c0       	rjmp	.+160    	; 0x404 <__stack+0x105>
		}
		case 4: {
			LED4OFF;
 364:	8b e2       	ldi	r24, 0x2B	; 43
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	2b e2       	ldi	r18, 0x2B	; 43
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	f9 01       	movw	r30, r18
 36e:	20 81       	ld	r18, Z
 370:	2e 7f       	andi	r18, 0xFE	; 254
 372:	fc 01       	movw	r30, r24
 374:	20 83       	st	Z, r18
			break;
 376:	46 c0       	rjmp	.+140    	; 0x404 <__stack+0x105>
		}
		case 5: {
			LED5OFF;
 378:	88 e2       	ldi	r24, 0x28	; 40
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	28 e2       	ldi	r18, 0x28	; 40
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	f9 01       	movw	r30, r18
 382:	20 81       	ld	r18, Z
 384:	2f 7b       	andi	r18, 0xBF	; 191
 386:	fc 01       	movw	r30, r24
 388:	20 83       	st	Z, r18
			break;
 38a:	3c c0       	rjmp	.+120    	; 0x404 <__stack+0x105>
		}
		case 6: {
			LED6OFF;
 38c:	88 e2       	ldi	r24, 0x28	; 40
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	28 e2       	ldi	r18, 0x28	; 40
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	f9 01       	movw	r30, r18
 396:	20 81       	ld	r18, Z
 398:	2f 7d       	andi	r18, 0xDF	; 223
 39a:	fc 01       	movw	r30, r24
 39c:	20 83       	st	Z, r18
			break;
 39e:	32 c0       	rjmp	.+100    	; 0x404 <__stack+0x105>
		}
		case 7: {
			LED7OFF;
 3a0:	88 e2       	ldi	r24, 0x28	; 40
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	28 e2       	ldi	r18, 0x28	; 40
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	f9 01       	movw	r30, r18
 3aa:	20 81       	ld	r18, Z
 3ac:	2f 7e       	andi	r18, 0xEF	; 239
 3ae:	fc 01       	movw	r30, r24
 3b0:	20 83       	st	Z, r18
			break;
 3b2:	28 c0       	rjmp	.+80     	; 0x404 <__stack+0x105>
		}
		case 8: {
			LED8OFF;
 3b4:	88 e2       	ldi	r24, 0x28	; 40
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	28 e2       	ldi	r18, 0x28	; 40
 3ba:	30 e0       	ldi	r19, 0x00	; 0
 3bc:	f9 01       	movw	r30, r18
 3be:	20 81       	ld	r18, Z
 3c0:	27 7f       	andi	r18, 0xF7	; 247
 3c2:	fc 01       	movw	r30, r24
 3c4:	20 83       	st	Z, r18
			break;
 3c6:	1e c0       	rjmp	.+60     	; 0x404 <__stack+0x105>
		}
		case 9: {
			LED9OFF;
 3c8:	88 e2       	ldi	r24, 0x28	; 40
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	28 e2       	ldi	r18, 0x28	; 40
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	f9 01       	movw	r30, r18
 3d2:	20 81       	ld	r18, Z
 3d4:	2b 7f       	andi	r18, 0xFB	; 251
 3d6:	fc 01       	movw	r30, r24
 3d8:	20 83       	st	Z, r18
			break;
 3da:	14 c0       	rjmp	.+40     	; 0x404 <__stack+0x105>
		}
		case 10: {
			LEDAOFF;
 3dc:	88 e2       	ldi	r24, 0x28	; 40
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	28 e2       	ldi	r18, 0x28	; 40
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	f9 01       	movw	r30, r18
 3e6:	20 81       	ld	r18, Z
 3e8:	2d 7f       	andi	r18, 0xFD	; 253
 3ea:	fc 01       	movw	r30, r24
 3ec:	20 83       	st	Z, r18
			break;
 3ee:	0a c0       	rjmp	.+20     	; 0x404 <__stack+0x105>
		}
		case 11: {
			LEDBOFF;
 3f0:	88 e2       	ldi	r24, 0x28	; 40
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	28 e2       	ldi	r18, 0x28	; 40
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	f9 01       	movw	r30, r18
 3fa:	20 81       	ld	r18, Z
 3fc:	2e 7f       	andi	r18, 0xFE	; 254
 3fe:	fc 01       	movw	r30, r24
 400:	20 83       	st	Z, r18
			break;
 402:	00 00       	nop
		}
	}
}
 404:	0f 90       	pop	r0
 406:	0f 90       	pop	r0
 408:	cf 91       	pop	r28
 40a:	df 91       	pop	r29
 40c:	08 95       	ret

0000040e <pwroff>:

void pwroff(void)
{
 40e:	df 93       	push	r29
 410:	cf 93       	push	r28
 412:	cd b7       	in	r28, 0x3d	; 61
 414:	de b7       	in	r29, 0x3e	; 62
	PORTD = 0;
 416:	8b e2       	ldi	r24, 0x2B	; 43
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	fc 01       	movw	r30, r24
 41c:	10 82       	st	Z, r1
	PORTC = 0;
 41e:	88 e2       	ldi	r24, 0x28	; 40
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	fc 01       	movw	r30, r24
 424:	10 82       	st	Z, r1
	DDRD = 0;
 426:	8a e2       	ldi	r24, 0x2A	; 42
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	fc 01       	movw	r30, r24
 42c:	10 82       	st	Z, r1
	DDRC = 0;
 42e:	87 e2       	ldi	r24, 0x27	; 39
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	fc 01       	movw	r30, r24
 434:	10 82       	st	Z, r1

	PWRP &= ~bv(PWR); //auro power off
 436:	85 e2       	ldi	r24, 0x25	; 37
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	25 e2       	ldi	r18, 0x25	; 37
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	f9 01       	movw	r30, r18
 440:	20 81       	ld	r18, Z
 442:	2b 7f       	andi	r18, 0xFB	; 251
 444:	fc 01       	movw	r30, r24
 446:	20 83       	st	Z, r18

}
 448:	cf 91       	pop	r28
 44a:	df 91       	pop	r29
 44c:	08 95       	ret

0000044e <main>:

int main(void)
{
 44e:	df 93       	push	r29
 450:	cf 93       	push	r28
 452:	cd b7       	in	r28, 0x3d	; 61
 454:	de b7       	in	r29, 0x3e	; 62
 456:	28 97       	sbiw	r28, 0x08	; 8
 458:	0f b6       	in	r0, 0x3f	; 63
 45a:	f8 94       	cli
 45c:	de bf       	out	0x3e, r29	; 62
 45e:	0f be       	out	0x3f, r0	; 63
 460:	cd bf       	out	0x3d, r28	; 61

	init();
 462:	70 de       	rcall	.-800    	; 0x144 <init>

	int k = 0;
 464:	18 86       	std	Y+8, r1	; 0x08
 466:	1f 82       	std	Y+7, r1	; 0x07

	for (int j = 0; j<255; j++)
 468:	1a 82       	std	Y+2, r1	; 0x02
 46a:	19 82       	std	Y+1, r1	; 0x01
 46c:	2a c0       	rjmp	.+84     	; 0x4c2 <main+0x74>
	{
		//int i;
//		k = rand();
		k = rand();
 46e:	9f d0       	rcall	.+318    	; 0x5ae <rand>
 470:	98 87       	std	Y+8, r25	; 0x08
 472:	8f 83       	std	Y+7, r24	; 0x07
		ledon(k);
 474:	8f 81       	ldd	r24, Y+7	; 0x07
 476:	98 85       	ldd	r25, Y+8	; 0x08
 478:	90 de       	rcall	.-736    	; 0x19a <ledon>
		for (unsigned int i = 0; i<10000; i++) {};
 47a:	1c 82       	std	Y+4, r1	; 0x04
 47c:	1b 82       	std	Y+3, r1	; 0x03
 47e:	05 c0       	rjmp	.+10     	; 0x48a <main+0x3c>
 480:	8b 81       	ldd	r24, Y+3	; 0x03
 482:	9c 81       	ldd	r25, Y+4	; 0x04
 484:	01 96       	adiw	r24, 0x01	; 1
 486:	9c 83       	std	Y+4, r25	; 0x04
 488:	8b 83       	std	Y+3, r24	; 0x03
 48a:	8b 81       	ldd	r24, Y+3	; 0x03
 48c:	9c 81       	ldd	r25, Y+4	; 0x04
 48e:	27 e2       	ldi	r18, 0x27	; 39
 490:	80 31       	cpi	r24, 0x10	; 16
 492:	92 07       	cpc	r25, r18
 494:	a8 f3       	brcs	.-22     	; 0x480 <main+0x32>
		ledoff(k);
 496:	8f 81       	ldd	r24, Y+7	; 0x07
 498:	98 85       	ldd	r25, Y+8	; 0x08
 49a:	1c df       	rcall	.-456    	; 0x2d4 <ledoff>
//		PORTD |= bv(LED0) | bv(LED1) | bv(LED2) | bv(LED3) | bv(LED4);
//		PORTC |= bv(LED5) | bv(LED6) | bv(LED7) | bv(LED8) | bv(LED9) | bv(LEDA) | bv(LEDB);
		
		for (unsigned int i = 0; i<40000; i++) {};
 49c:	1e 82       	std	Y+6, r1	; 0x06
 49e:	1d 82       	std	Y+5, r1	; 0x05
 4a0:	05 c0       	rjmp	.+10     	; 0x4ac <main+0x5e>
 4a2:	8d 81       	ldd	r24, Y+5	; 0x05
 4a4:	9e 81       	ldd	r25, Y+6	; 0x06
 4a6:	01 96       	adiw	r24, 0x01	; 1
 4a8:	9e 83       	std	Y+6, r25	; 0x06
 4aa:	8d 83       	std	Y+5, r24	; 0x05
 4ac:	8d 81       	ldd	r24, Y+5	; 0x05
 4ae:	9e 81       	ldd	r25, Y+6	; 0x06
 4b0:	2c e9       	ldi	r18, 0x9C	; 156
 4b2:	80 34       	cpi	r24, 0x40	; 64
 4b4:	92 07       	cpc	r25, r18
 4b6:	a8 f3       	brcs	.-22     	; 0x4a2 <main+0x54>

	init();

	int k = 0;

	for (int j = 0; j<255; j++)
 4b8:	89 81       	ldd	r24, Y+1	; 0x01
 4ba:	9a 81       	ldd	r25, Y+2	; 0x02
 4bc:	01 96       	adiw	r24, 0x01	; 1
 4be:	9a 83       	std	Y+2, r25	; 0x02
 4c0:	89 83       	std	Y+1, r24	; 0x01
 4c2:	89 81       	ldd	r24, Y+1	; 0x01
 4c4:	9a 81       	ldd	r25, Y+2	; 0x02
 4c6:	8f 3f       	cpi	r24, 0xFF	; 255
 4c8:	91 05       	cpc	r25, r1
 4ca:	8c f2       	brlt	.-94     	; 0x46e <main+0x20>

//		for (i = 0; i<40000; i++) {};

	}

	pwroff();
 4cc:	a0 df       	rcall	.-192    	; 0x40e <pwroff>
 4ce:	80 e0       	ldi	r24, 0x00	; 0
 4d0:	90 e0       	ldi	r25, 0x00	; 0
}
 4d2:	28 96       	adiw	r28, 0x08	; 8
 4d4:	0f b6       	in	r0, 0x3f	; 63
 4d6:	f8 94       	cli
 4d8:	de bf       	out	0x3e, r29	; 62
 4da:	0f be       	out	0x3f, r0	; 63
 4dc:	cd bf       	out	0x3d, r28	; 61
 4de:	cf 91       	pop	r28
 4e0:	df 91       	pop	r29
 4e2:	08 95       	ret

000004e4 <__divmodhi4>:
 4e4:	97 fb       	bst	r25, 7
 4e6:	09 2e       	mov	r0, r25
 4e8:	07 26       	eor	r0, r23
 4ea:	0a d0       	rcall	.+20     	; 0x500 <__divmodhi4_neg1>
 4ec:	77 fd       	sbrc	r23, 7
 4ee:	04 d0       	rcall	.+8      	; 0x4f8 <__divmodhi4_neg2>
 4f0:	0c d0       	rcall	.+24     	; 0x50a <__udivmodhi4>
 4f2:	06 d0       	rcall	.+12     	; 0x500 <__divmodhi4_neg1>
 4f4:	00 20       	and	r0, r0
 4f6:	1a f4       	brpl	.+6      	; 0x4fe <__divmodhi4_exit>

000004f8 <__divmodhi4_neg2>:
 4f8:	70 95       	com	r23
 4fa:	61 95       	neg	r22
 4fc:	7f 4f       	sbci	r23, 0xFF	; 255

000004fe <__divmodhi4_exit>:
 4fe:	08 95       	ret

00000500 <__divmodhi4_neg1>:
 500:	f6 f7       	brtc	.-4      	; 0x4fe <__divmodhi4_exit>
 502:	90 95       	com	r25
 504:	81 95       	neg	r24
 506:	9f 4f       	sbci	r25, 0xFF	; 255
 508:	08 95       	ret

0000050a <__udivmodhi4>:
 50a:	aa 1b       	sub	r26, r26
 50c:	bb 1b       	sub	r27, r27
 50e:	51 e1       	ldi	r21, 0x11	; 17
 510:	07 c0       	rjmp	.+14     	; 0x520 <__udivmodhi4_ep>

00000512 <__udivmodhi4_loop>:
 512:	aa 1f       	adc	r26, r26
 514:	bb 1f       	adc	r27, r27
 516:	a6 17       	cp	r26, r22
 518:	b7 07       	cpc	r27, r23
 51a:	10 f0       	brcs	.+4      	; 0x520 <__udivmodhi4_ep>
 51c:	a6 1b       	sub	r26, r22
 51e:	b7 0b       	sbc	r27, r23

00000520 <__udivmodhi4_ep>:
 520:	88 1f       	adc	r24, r24
 522:	99 1f       	adc	r25, r25
 524:	5a 95       	dec	r21
 526:	a9 f7       	brne	.-22     	; 0x512 <__udivmodhi4_loop>
 528:	80 95       	com	r24
 52a:	90 95       	com	r25
 52c:	bc 01       	movw	r22, r24
 52e:	cd 01       	movw	r24, r26
 530:	08 95       	ret

00000532 <do_rand>:
 532:	a0 e0       	ldi	r26, 0x00	; 0
 534:	b0 e0       	ldi	r27, 0x00	; 0
 536:	ee e9       	ldi	r30, 0x9E	; 158
 538:	f2 e0       	ldi	r31, 0x02	; 2
 53a:	8a c0       	rjmp	.+276    	; 0x650 <__prologue_saves__+0x10>
 53c:	ec 01       	movw	r28, r24
 53e:	68 81       	ld	r22, Y
 540:	79 81       	ldd	r23, Y+1	; 0x01
 542:	8a 81       	ldd	r24, Y+2	; 0x02
 544:	9b 81       	ldd	r25, Y+3	; 0x03
 546:	61 15       	cp	r22, r1
 548:	71 05       	cpc	r23, r1
 54a:	81 05       	cpc	r24, r1
 54c:	91 05       	cpc	r25, r1
 54e:	21 f4       	brne	.+8      	; 0x558 <do_rand+0x26>
 550:	64 e2       	ldi	r22, 0x24	; 36
 552:	79 ed       	ldi	r23, 0xD9	; 217
 554:	8b e5       	ldi	r24, 0x5B	; 91
 556:	97 e0       	ldi	r25, 0x07	; 7
 558:	2d e1       	ldi	r18, 0x1D	; 29
 55a:	33 ef       	ldi	r19, 0xF3	; 243
 55c:	41 e0       	ldi	r20, 0x01	; 1
 55e:	50 e0       	ldi	r21, 0x00	; 0
 560:	54 d0       	rcall	.+168    	; 0x60a <__divmodsi4>
 562:	79 01       	movw	r14, r18
 564:	8a 01       	movw	r16, r20
 566:	27 ea       	ldi	r18, 0xA7	; 167
 568:	31 e4       	ldi	r19, 0x41	; 65
 56a:	40 e0       	ldi	r20, 0x00	; 0
 56c:	50 e0       	ldi	r21, 0x00	; 0
 56e:	2e d0       	rcall	.+92     	; 0x5cc <__mulsi3>
 570:	5b 01       	movw	r10, r22
 572:	6c 01       	movw	r12, r24
 574:	c8 01       	movw	r24, r16
 576:	b7 01       	movw	r22, r14
 578:	2c ee       	ldi	r18, 0xEC	; 236
 57a:	34 ef       	ldi	r19, 0xF4	; 244
 57c:	4f ef       	ldi	r20, 0xFF	; 255
 57e:	5f ef       	ldi	r21, 0xFF	; 255
 580:	25 d0       	rcall	.+74     	; 0x5cc <__mulsi3>
 582:	6a 0d       	add	r22, r10
 584:	7b 1d       	adc	r23, r11
 586:	8c 1d       	adc	r24, r12
 588:	9d 1d       	adc	r25, r13
 58a:	97 ff       	sbrs	r25, 7
 58c:	04 c0       	rjmp	.+8      	; 0x596 <do_rand+0x64>
 58e:	61 50       	subi	r22, 0x01	; 1
 590:	70 40       	sbci	r23, 0x00	; 0
 592:	80 40       	sbci	r24, 0x00	; 0
 594:	90 48       	sbci	r25, 0x80	; 128
 596:	68 83       	st	Y, r22
 598:	79 83       	std	Y+1, r23	; 0x01
 59a:	8a 83       	std	Y+2, r24	; 0x02
 59c:	9b 83       	std	Y+3, r25	; 0x03
 59e:	7f 77       	andi	r23, 0x7F	; 127
 5a0:	cb 01       	movw	r24, r22
 5a2:	cd b7       	in	r28, 0x3d	; 61
 5a4:	de b7       	in	r29, 0x3e	; 62
 5a6:	ea e0       	ldi	r30, 0x0A	; 10
 5a8:	6f c0       	rjmp	.+222    	; 0x688 <__epilogue_restores__+0x10>

000005aa <rand_r>:
 5aa:	c3 df       	rcall	.-122    	; 0x532 <do_rand>
 5ac:	08 95       	ret

000005ae <rand>:
 5ae:	80 e0       	ldi	r24, 0x00	; 0
 5b0:	91 e0       	ldi	r25, 0x01	; 1
 5b2:	bf df       	rcall	.-130    	; 0x532 <do_rand>
 5b4:	08 95       	ret

000005b6 <srand>:
 5b6:	a0 e0       	ldi	r26, 0x00	; 0
 5b8:	b0 e0       	ldi	r27, 0x00	; 0
 5ba:	80 93 00 01 	sts	0x0100, r24
 5be:	90 93 01 01 	sts	0x0101, r25
 5c2:	a0 93 02 01 	sts	0x0102, r26
 5c6:	b0 93 03 01 	sts	0x0103, r27
 5ca:	08 95       	ret

000005cc <__mulsi3>:
 5cc:	62 9f       	mul	r22, r18
 5ce:	d0 01       	movw	r26, r0
 5d0:	73 9f       	mul	r23, r19
 5d2:	f0 01       	movw	r30, r0
 5d4:	82 9f       	mul	r24, r18
 5d6:	e0 0d       	add	r30, r0
 5d8:	f1 1d       	adc	r31, r1
 5da:	64 9f       	mul	r22, r20
 5dc:	e0 0d       	add	r30, r0
 5de:	f1 1d       	adc	r31, r1
 5e0:	92 9f       	mul	r25, r18
 5e2:	f0 0d       	add	r31, r0
 5e4:	83 9f       	mul	r24, r19
 5e6:	f0 0d       	add	r31, r0
 5e8:	74 9f       	mul	r23, r20
 5ea:	f0 0d       	add	r31, r0
 5ec:	65 9f       	mul	r22, r21
 5ee:	f0 0d       	add	r31, r0
 5f0:	99 27       	eor	r25, r25
 5f2:	72 9f       	mul	r23, r18
 5f4:	b0 0d       	add	r27, r0
 5f6:	e1 1d       	adc	r30, r1
 5f8:	f9 1f       	adc	r31, r25
 5fa:	63 9f       	mul	r22, r19
 5fc:	b0 0d       	add	r27, r0
 5fe:	e1 1d       	adc	r30, r1
 600:	f9 1f       	adc	r31, r25
 602:	bd 01       	movw	r22, r26
 604:	cf 01       	movw	r24, r30
 606:	11 24       	eor	r1, r1
 608:	08 95       	ret

0000060a <__divmodsi4>:
 60a:	97 fb       	bst	r25, 7
 60c:	09 2e       	mov	r0, r25
 60e:	05 26       	eor	r0, r21
 610:	0e d0       	rcall	.+28     	; 0x62e <__divmodsi4_neg1>
 612:	57 fd       	sbrc	r21, 7
 614:	04 d0       	rcall	.+8      	; 0x61e <__divmodsi4_neg2>
 616:	4b d0       	rcall	.+150    	; 0x6ae <__udivmodsi4>
 618:	0a d0       	rcall	.+20     	; 0x62e <__divmodsi4_neg1>
 61a:	00 1c       	adc	r0, r0
 61c:	38 f4       	brcc	.+14     	; 0x62c <__divmodsi4_exit>

0000061e <__divmodsi4_neg2>:
 61e:	50 95       	com	r21
 620:	40 95       	com	r20
 622:	30 95       	com	r19
 624:	21 95       	neg	r18
 626:	3f 4f       	sbci	r19, 0xFF	; 255
 628:	4f 4f       	sbci	r20, 0xFF	; 255
 62a:	5f 4f       	sbci	r21, 0xFF	; 255

0000062c <__divmodsi4_exit>:
 62c:	08 95       	ret

0000062e <__divmodsi4_neg1>:
 62e:	f6 f7       	brtc	.-4      	; 0x62c <__divmodsi4_exit>
 630:	90 95       	com	r25
 632:	80 95       	com	r24
 634:	70 95       	com	r23
 636:	61 95       	neg	r22
 638:	7f 4f       	sbci	r23, 0xFF	; 255
 63a:	8f 4f       	sbci	r24, 0xFF	; 255
 63c:	9f 4f       	sbci	r25, 0xFF	; 255
 63e:	08 95       	ret

00000640 <__prologue_saves__>:
 640:	2f 92       	push	r2
 642:	3f 92       	push	r3
 644:	4f 92       	push	r4
 646:	5f 92       	push	r5
 648:	6f 92       	push	r6
 64a:	7f 92       	push	r7
 64c:	8f 92       	push	r8
 64e:	9f 92       	push	r9
 650:	af 92       	push	r10
 652:	bf 92       	push	r11
 654:	cf 92       	push	r12
 656:	df 92       	push	r13
 658:	ef 92       	push	r14
 65a:	ff 92       	push	r15
 65c:	0f 93       	push	r16
 65e:	1f 93       	push	r17
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	cd b7       	in	r28, 0x3d	; 61
 666:	de b7       	in	r29, 0x3e	; 62
 668:	ca 1b       	sub	r28, r26
 66a:	db 0b       	sbc	r29, r27
 66c:	0f b6       	in	r0, 0x3f	; 63
 66e:	f8 94       	cli
 670:	de bf       	out	0x3e, r29	; 62
 672:	0f be       	out	0x3f, r0	; 63
 674:	cd bf       	out	0x3d, r28	; 61
 676:	09 94       	ijmp

00000678 <__epilogue_restores__>:
 678:	2a 88       	ldd	r2, Y+18	; 0x12
 67a:	39 88       	ldd	r3, Y+17	; 0x11
 67c:	48 88       	ldd	r4, Y+16	; 0x10
 67e:	5f 84       	ldd	r5, Y+15	; 0x0f
 680:	6e 84       	ldd	r6, Y+14	; 0x0e
 682:	7d 84       	ldd	r7, Y+13	; 0x0d
 684:	8c 84       	ldd	r8, Y+12	; 0x0c
 686:	9b 84       	ldd	r9, Y+11	; 0x0b
 688:	aa 84       	ldd	r10, Y+10	; 0x0a
 68a:	b9 84       	ldd	r11, Y+9	; 0x09
 68c:	c8 84       	ldd	r12, Y+8	; 0x08
 68e:	df 80       	ldd	r13, Y+7	; 0x07
 690:	ee 80       	ldd	r14, Y+6	; 0x06
 692:	fd 80       	ldd	r15, Y+5	; 0x05
 694:	0c 81       	ldd	r16, Y+4	; 0x04
 696:	1b 81       	ldd	r17, Y+3	; 0x03
 698:	aa 81       	ldd	r26, Y+2	; 0x02
 69a:	b9 81       	ldd	r27, Y+1	; 0x01
 69c:	ce 0f       	add	r28, r30
 69e:	d1 1d       	adc	r29, r1
 6a0:	0f b6       	in	r0, 0x3f	; 63
 6a2:	f8 94       	cli
 6a4:	de bf       	out	0x3e, r29	; 62
 6a6:	0f be       	out	0x3f, r0	; 63
 6a8:	cd bf       	out	0x3d, r28	; 61
 6aa:	ed 01       	movw	r28, r26
 6ac:	08 95       	ret

000006ae <__udivmodsi4>:
 6ae:	a1 e2       	ldi	r26, 0x21	; 33
 6b0:	1a 2e       	mov	r1, r26
 6b2:	aa 1b       	sub	r26, r26
 6b4:	bb 1b       	sub	r27, r27
 6b6:	fd 01       	movw	r30, r26
 6b8:	0d c0       	rjmp	.+26     	; 0x6d4 <__udivmodsi4_ep>

000006ba <__udivmodsi4_loop>:
 6ba:	aa 1f       	adc	r26, r26
 6bc:	bb 1f       	adc	r27, r27
 6be:	ee 1f       	adc	r30, r30
 6c0:	ff 1f       	adc	r31, r31
 6c2:	a2 17       	cp	r26, r18
 6c4:	b3 07       	cpc	r27, r19
 6c6:	e4 07       	cpc	r30, r20
 6c8:	f5 07       	cpc	r31, r21
 6ca:	20 f0       	brcs	.+8      	; 0x6d4 <__udivmodsi4_ep>
 6cc:	a2 1b       	sub	r26, r18
 6ce:	b3 0b       	sbc	r27, r19
 6d0:	e4 0b       	sbc	r30, r20
 6d2:	f5 0b       	sbc	r31, r21

000006d4 <__udivmodsi4_ep>:
 6d4:	66 1f       	adc	r22, r22
 6d6:	77 1f       	adc	r23, r23
 6d8:	88 1f       	adc	r24, r24
 6da:	99 1f       	adc	r25, r25
 6dc:	1a 94       	dec	r1
 6de:	69 f7       	brne	.-38     	; 0x6ba <__udivmodsi4_loop>
 6e0:	60 95       	com	r22
 6e2:	70 95       	com	r23
 6e4:	80 95       	com	r24
 6e6:	90 95       	com	r25
 6e8:	9b 01       	movw	r18, r22
 6ea:	ac 01       	movw	r20, r24
 6ec:	bd 01       	movw	r22, r26
 6ee:	cf 01       	movw	r24, r30
 6f0:	08 95       	ret

000006f2 <_exit>:
 6f2:	f8 94       	cli

000006f4 <__stop_program>:
 6f4:	ff cf       	rjmp	.-2      	; 0x6f4 <__stop_program>
